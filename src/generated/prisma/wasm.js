
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  subtitle: 'subtitle',
  slug: 'slug',
  status: 'status',
  heroImage: 'heroImage',
  liveDemo: 'liveDemo',
  github: 'github',
  caseStudy: 'caseStudy',
  publishedAt: 'publishedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectOverviewScalarFieldEnum = {
  id: 'id',
  problem: 'problem',
  solution: 'solution',
  role: 'role',
  impact: 'impact',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.ProjectMetricsScalarFieldEnum = {
  id: 'id',
  launchDate: 'launchDate',
  duration: 'duration',
  teamSize: 'teamSize',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.TechnicalDetailsScalarFieldEnum = {
  id: 'id',
  database: 'database',
  api: 'api',
  components: 'components',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.ScreenshotScalarFieldEnum = {
  id: 'id',
  url: 'url',
  description: 'description',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.TechnologyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  reason: 'reason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectTagScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  projectId: 'projectId',
  tagId: 'tagId'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.BusinessOutcomeScalarFieldEnum = {
  id: 'id',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.ImprovementScalarFieldEnum = {
  id: 'id',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.NextStepScalarFieldEnum = {
  id: 'id',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.FutureToolScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.PerformanceMetricScalarFieldEnum = {
  id: 'id',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogPostScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  title: 'title',
  subtitle: 'subtitle',
  excerpt: 'excerpt',
  metaDescription: 'metaDescription',
  socialImage: 'socialImage',
  readTime: 'readTime',
  wordCount: 'wordCount',
  views: 'views',
  heroImage: 'heroImage',
  heroImageAlt: 'heroImageAlt',
  heroImageCaption: 'heroImageCaption',
  publishedAt: 'publishedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  author: 'author',
  categoryId: 'categoryId',
  seriesId: 'seriesId',
  seriesPart: 'seriesPart'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  totalParts: 'totalParts',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContentBlockScalarFieldEnum = {
  id: 'id',
  type: 'type',
  order: 'order',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  level: 'level',
  language: 'language',
  codeTitle: 'codeTitle',
  imageUrl: 'imageUrl',
  imageAlt: 'imageAlt',
  imageCaption: 'imageCaption',
  imageAlignment: 'imageAlignment',
  calloutVariant: 'calloutVariant',
  calloutTitle: 'calloutTitle',
  quoteAuthor: 'quoteAuthor',
  listStyle: 'listStyle',
  listItems: 'listItems',
  videoType: 'videoType',
  videoId: 'videoId',
  videoTitle: 'videoTitle',
  paragraphStyle: 'paragraphStyle',
  blogPostId: 'blogPostId'
};

exports.Prisma.BlogTagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogPostTagScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  blogPostId: 'blogPostId',
  blogTagId: 'blogTagId'
};

exports.Prisma.ContactSubmissionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  subject: 'subject',
  message: 'message',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ProjectStatus = exports.$Enums.ProjectStatus = {
  LIVE: 'LIVE',
  IN_PROGRESS: 'IN_PROGRESS',
  ARCHIVED: 'ARCHIVED'
};

exports.ContentBlockType = exports.$Enums.ContentBlockType = {
  PARAGRAPH: 'PARAGRAPH',
  HEADING: 'HEADING',
  CODE: 'CODE',
  IMAGE: 'IMAGE',
  CALLOUT: 'CALLOUT',
  QUOTE: 'QUOTE',
  LIST: 'LIST',
  VIDEO: 'VIDEO'
};

exports.CalloutVariant = exports.$Enums.CalloutVariant = {
  INFO: 'INFO',
  WARNING: 'WARNING',
  TIP: 'TIP',
  ERROR: 'ERROR'
};

exports.ListStyle = exports.$Enums.ListStyle = {
  BULLET: 'BULLET',
  NUMBERED: 'NUMBERED'
};

exports.VideoType = exports.$Enums.VideoType = {
  YOUTUBE: 'YOUTUBE',
  VIMEO: 'VIMEO'
};

exports.Prisma.ModelName = {
  Project: 'Project',
  ProjectOverview: 'ProjectOverview',
  ProjectMetrics: 'ProjectMetrics',
  TechnicalDetails: 'TechnicalDetails',
  Screenshot: 'Screenshot',
  Technology: 'Technology',
  Tag: 'Tag',
  ProjectTag: 'ProjectTag',
  Lesson: 'Lesson',
  BusinessOutcome: 'BusinessOutcome',
  Improvement: 'Improvement',
  NextStep: 'NextStep',
  FutureTool: 'FutureTool',
  PerformanceMetric: 'PerformanceMetric',
  User: 'User',
  BlogPost: 'BlogPost',
  Category: 'Category',
  Series: 'Series',
  ContentBlock: 'ContentBlock',
  BlogTag: 'BlogTag',
  BlogPostTag: 'BlogPostTag',
  ContactSubmission: 'ContactSubmission'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
